---
title: "Homework5-DataVis-ggplot"
author: "Ericka Kay"
date: 'DUE: Thursday, March 10'
output:
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#### Necessary items:
- **libraries:** tidyverse, ggsci, ggforce, patchwork, Hmisc
- **files:** bloom_df.csv, hw_task2_blank.png

Within RStudio you can directly edit these blocks of code and turn in your homework that way with your code and figures printed.   
I **HIGHLY** recommend getting your code to work in a normal R script then just copy and pasting the final code over to this document

**First: import libraries, set your working directory, and read in bloom_df**  
```{r init, message=FALSE, warning=FALSE}
library(tidyverse) 
library(ggforce) 
library(ggsci)
library(patchwork)
library(Hmisc)

setwd('~/g/Classes/DataScience/data_vis/') #change to match your ggplot directory

bloom_df <- read.csv('bloom_df.csv')
```

### bloom_df contents
- **taxa:** genus_species
- **genus** 
- **species** 
- **logbodysize** 
- **trophic_position**
- **reg:** diadromous or non-diadromous

Let's take a peak and look at the structure
```{r bloom_df}
bloom_df[1:5,]
str(bloom_df)
```

### Graphical tasks

This next tasks are going to ask you to make a series of figures. For each one, I would like you to make all of them *look good*. Change the theme around, change the axis labels, etc. Additionally, each of these will use the **reg** column which has 2 factors. Change the color and/or shape of them both. 

### Task 1: Continuous vs. continuous plot

Create two scatterplots of logbodysize vs. trophic_position grouped by reg
ggplot(data=bloom_df,aes(x=trophic_position,y=logbodysize,color=reg)) + 
  geom_point() 
  
##### First plot: 
- a 2 trend lines (method = 'lm'), one for each reg variable
ggplot(data=bloom_df,aes(x=trophic_position,y=logbodysize,color=reg)) + 
  geom_point()+
  stat_smooth(method='lm')
  
```{r 1.1}
#plot 1.1
```

##### Second plot 
- a single trend line for the whole model
ggplot(data=bloom_df,aes(x=trophic_position,y=logbodysize)) + 
  geom_point(aes(colour=reg)) + 
  stat_smooth(method='lm')
  
```{r 1.2}
#plot 1.2
```

### Task 2: Continuous vs. categorical

##### The layout will be: 
- 2 panels: trophic_position and logbodysize  
- x axis: reg  
- y axis: value of trophic_position and logbodysize  

Trophic_sum_df <- bloom_df %>%
  group_by(reg) %>%
  summarise(mean = mean(trophic_position, na.rm = TRUE),
            sd = sd(trophic_position, na.rm = TRUE), #temp standard deviation
            n = n()) %>% #temp count
  mutate(se = sd / sqrt(n), #Temp standard error
         ci = 1.96 * se)
  
Trophic_sum_df$LifeChar <- 'trophic_position'          

LogBodySize_sum_df <- bloom_df %>%
  group_by(reg) %>%
  summarise(mean = mean(logbodysize, na.rm = TRUE),
            sd = sd(logbodysize, na.rm = TRUE), #temp standard deviation
            n = n()) %>% #temp count
  mutate(se = sd / sqrt(n), #Temp standard error
         ci = 1.96 * se)

LogBodySize_sum_df$LifeChar <- 'logbodysize'  

LifeChar_sum_df <- rbind(Trophic_sum_df,LogBodySize_sum_df)
LifeChar_sum_df

ggplot(data=LifeChar_sum_df,aes(x=reg,y=mean,fill=LifeChar)) +
  facet_wrap(~LifeChar,nrow=1,scales = 'free') + 
  geom_bar(stat='identity')
  
##### Create 4 plots:  
- bar and error bars (mean and 95% conf. int.)  
- point and error bars (mean and 95% conf. int.)  
- box plots  
- raw data + point and error bars (mean and 95% conf. int.)  

All these plots should have the same general layout but change the type of plot to visualize the data. 

**HINT:** logbodysize and trophic_position need to be turned into long format  

bloom_long_df <- bloom_df %>%
  pivot_longer(cols = c(trophic_position, logbodysize), names_to = "Life_history", values_to = "value")
bloom_long_df[1:10, ]

##### Example layout:   
![sample layout for task2](hw_task2_blank.png){width=50%}

```{r 2.1}
#plot 2.1
```
ggplot(data=bloom_long_df,aes(x=reg,y=value,fill=Life_history)) +
  facet_wrap(~Life_history,nrow=1,scales = 'free') +
  stat_summary(fun = mean, geom = "bar") +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",color='black')
  
```{r 2.2}
#plot 2.2
```
ggplot(data=bloom_long_df,aes(x=reg,y=value,colour=Life_history)) +
  facet_wrap(~Life_history,nrow=1,scales = 'free') +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",color='black') + 
  stat_summary(fun = mean, geom = "point",size=5) 
  
```{r 2.3}
#plot 2.3
```
ggplot(data=bloom_long_df,aes(x=reg,y=value,fill=Life_history)) +
  facet_wrap(~Life_history,nrow=1,scales = 'free') +
  geom_boxplot()
  
```{r 2.4}
#plot 2.4
```
ggplot(data=bloom_long_df,aes(x=reg,y=value,colour=Life_history)) +
  facet_wrap(~Life_history,nrow=1,scales = 'free') +
  geom_point(size=4) +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",color='black') + 
  stat_summary(fun = mean, geom = "point",size=5,colour='black') 
  
### Task 3: layering your plots

Make any two figures with the bloom_df! Can be something we've done or something completely different. Make one TERRIBLE figure and one GREAT figure.

Put them together using *patchwork* or *ggarrange* 


```{r 3}
#plot 3
```
#worst
worst_plot <- ggplot(data=Trophic_sum_df,aes(x=reg,y=mean,fill=LifeChar)) +
  geom_bar(stat='identity',position='dodge') + 
  ggtitle('Worst') + 
  theme(plot.title = element_text(size = 20, colour="black",face = "bold"))
worst_plot

# good plot
good_plot <- ggplot(data=bloom_df,aes(x=trophic_position,y=logbodysize)) + 
  geom_point(aes(fill=reg),size=4,pch=21,colour='black') + 
  stat_smooth(method='lm',linetype='dashed',colour='black',size=2) + 
  xlab('Trophic position') + ylab('Log Body Size') + 
  ggtitle('Trophic position affect on body size') +
  theme_classic()
good_plot
  
# combine worst and good plot into one pdf
worst_plot + good_plot + plot_layout(ncol=1,nrow=2)

### Bonus: make a map (not required)  

In the github for this course, there is an Rmarkdown called *ggmap_ex*. You can use this as a reference to make a map using any data you want. Try using your own data so it is useful.  

```{r bonus}
#bonus map
```